{
  "hash": "9b8e903c5de8cdfa10f7279f899d8ec2",
  "result": {
    "markdown": "---\ntitle: CNN analysis of Chip-seq data\n---\n\n\n\n## Overview on YY1\n\n<img src=\"figs/phase2/YY1-1.png\" width=\"500\">\n<img src=\"figs/phase2/YY1-2.png\" width=\"500\">\n\nAs we can see, YY1 appeared to respond well to the DNA breathing signal. We followed these results up with in-depth analysis into the YY1 TF.\n\n### Data processing\n\nOur YY1 positive sequences were collected from 6 different cell lines, 'A549', 'GM12878', 'GM12892', 'H1hESC', 'HepG2', and 'K562'. The first check made was whether sequences that were highly dependent on biophysical features for improved prediction performance had any overlap across the different cell lines. The goal was to see if the overlap extended to other TFs and cell lines as well.\n\nWe were using zero-nullification at inference initially. Zero nullification at inference gives input to the model evaluation phase that has a zero matrix in place of the biophysical features. The model output with features was then subtracted from the model output without features to get the effect of the biophysical features on the model output. The top ten sequences with the greatest difference were then tested for overlap across cell lines.\n\nThese are the overlap clusters we made with this architecture:\n\n<img src=\"figs/phase2/nonormalznull/YY1_clustermap.png\" width=\"500\">\n<img src=\"figs/phase2/nonormalznull/clustermap.png\" width=\"500\">\n\nThe next step was determined to be normalization of features. This was done because (ask Ben).\n\nThe normalization was carried out by calculating the mean and standard deviation values of a feature across the entire training partition of our dataset, and this value was then used on the testing set as well. The values we used for our Chip-seq data were:\n\n\n```{code}\ncoord: mean = 0.19155923417221135, std = 0.038960426724374435\ncoord_sq: mean = 0.14925209287264518, std = 0.039466117929090765\ncoord: mean = 0.07465950796958755, std = 0.018489519373127622\n```\n\n\nThe statistics for our test partitions after normalization were:\n\n\n```{code}\ncoord: mean = 0.07738674543113, std = 1.0111124691462943\ncoord_sq: mean = 0.08939614710405903, std = 1.0202053755668645\ncoord: mean = 0.08363005394874898, std = 1.0168371143051296\n```\n\n\nAfter normalizing, we repeated the analysis with zero nullification at inference. The results had a lot more overlap than the analysis conducted without normalizing:\n\n<img src=\"figs/phase2/znull/YY1_clustermap.png\" width=\"500\">\n<img src=\"figs/phase2/znull/clustermap.png\" width=\"500\">\n\nFurther improvements were made to the method of analysis. Instead of using zero-nullification, we decided that gaussian noise would be a better way to nullify the biophysical features. We tried two different methods with gaussian noise, the first was to use gaussian noise at inference, and the second was to train a separate model with gaussian noise and then subtract the model outputs.\n\nThe results for gaussian noise at inference were:\n\n<img src=\"figs/phase2/gnull/YY1_clustermap.png\" width=\"500\">\n<img src=\"figs/phase2/gnull/clustermap.png\" width=\"500\">\n\nThe results for gaussian noise at training were:\n\n<img src=\"figs/phase2/dualmodel/YY1_clustermap.png\" width=\"500\">\n<img src=\"figs/phase2/dualmodel/clustermap.png\" width=\"500\">\n\nThe results across the different methods were very different from each other. The most overlap was achieved with zero nullification of normalized features.\n\n<img src=\"figs/phase2/Modelcomparison.png\" width=\"500\">\n\n## Shift to STAT5A and FOSL1\n\n### AUC and PRC comparison across TFs\n\nParallel to the aforementioned investigation, we were also using the different variations of our models to see the difference between AUCs and PRCs across different TFs based on the biophysical features. The investigation involved adjusting not only the nullification method, but also some parameters of the CNNs for the sake of more effective motif extraction down the line. The results were as follows:\n\n\n",
    "supporting": [
      "phase2page_files"
    ],
    "filters": [],
    "includes": {}
  }
}