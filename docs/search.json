[
  {
    "objectID": "phase3page.html",
    "href": "phase3page.html",
    "title": "Analysis of gcPBM data",
    "section": "",
    "text": "We acquired gcPBM datasets for three TFs (MAX, MAD, MYC) from Alexandrov Boian’s lab. The data was about yay high and yay wide. We also acquired corresponding feature data for flipping and bubbles.\nThe bubble data, when acquired, was in the form of matrices with 130 rows and 36 columns. The individual columns represented base-pair positions, and rows represented time in picoseconds. The values in the matrix represented the distance between complementary base pairs at that position and time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Bubble heatmaps of sequences with the highest bubble values across all TFs (TF_partition_id - bubble_value)\n\n\nWe investigated multiple methods to optimally encode the bubble data to provide it to the CNN as an additional input channel alongside one-hot encoded sequence data.\n\n\n\n\n\n\nNormalized affinity values for each sequence in each TF\n\n\n\n \n\n\n\n\nLogarithmic distribution of all bubble values for each TF\n\n\n\nFigure 2: gcPBM exploration of affinity and bubble data values\n\n\nWe experimented with taking the average value across all time points, filtering this mean curve, and using the maxima of the resultant curve to delineate a bubble across a certain base pair window focused on the maxima.\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\nFigure 3: Initial attempt at processing bubble data (left to right: heatmap, mean curve, filtered curve, maxima of filtered curve with 3 base pair window)\n\n\nUsing the different variants in our gridsearch for best model parameters revealed no clear winner. We decided to investigate the bubble percentile values and eventually decided on all locations at timepoint 0 (t=0) with a value &gt; 0.03 as bubbles.\n\n\n\nWe tried to acquire motifs for the TFs from the JASPAR database, but we were unable to find motifs for MAD. We then used the motifs for MAX and MYC to scan for motif presence in the sequences of the gcPBM data. We used the FIMO tool from the MEME suite to scan for motif presence. We used the following parameters:\nTBD\n\n\n\nOnce we had the motifs and bubbles identified and tied to base pair locations, we did some basic exploration of the sequences and how motifs and bubbles presented themselves.\nTop 5 sequences per TF in terms of binding affinity that also have bubble features:\nTF = max\n1.  seq_id = 4831\n1.  DNA_sequence    = TGTGGCTTATCAAACCACGTGGTTTATCAAAATAAT\n1.  Bubble_sequence = ------+++++-----------++++++++++++--\n1.  Motif_sequence  = -------------++++++++++-------------\n2.  seq_id = 4187\n2.  DNA_sequence    = GAATTTGACCAAAACCACGTGGTTTGGCTGCAAGTT\n2.  Bubble_sequence = -+++--------------------------------\n2.  Motif_sequence  = -------------++++++++++-------------\n3.  seq_id = 5934\n3.  DNA_sequence    = ATCAGGAATCTGGACCACGTGGTCAGGCAGAACCAG\n3.  Bubble_sequence = ------+-----------------------------\n3.  Motif_sequence  = -------------++++++++++-------------\n4.  seq_id = 4471\n4.  DNA_sequence    = GGGCTTATGAGAGACCACGTGGTCTTGTGCTTTAGT\n4.  Bubble_sequence = ------+-----------------------------\n4.  Motif_sequence  = -------------++++++++++-------------\n5.  seq_id = 8206\n5.  DNA_sequence    = ACAACCACAGAAAACCACGTGGTTTGCTCTGAAATT\n5.  Bubble_sequence = ----------++-------------------++---\n5.  Motif_sequence  = -------------++++++++++-------------\nTF = myc\n1.  seq_id = 5288\n1.  DNA_sequence    = TGTGGCTTATCAAACCACGTGGTTTATCAAAATAAT\n1.  Bubble_sequence = ------++++++----------++++++++++++--\n1.  Motif_sequence  = ------------++++++++++++------------\n2.  seq_id = 3034\n2.  DNA_sequence    = GAATTTGACCAAAACCACGTGGTTTGGCTGCAAGTT\n2.  Bubble_sequence = --++--------------------------------\n2.  Motif_sequence  = ------------++++++++++++------------\n3.  seq_id = 3153\n3.  DNA_sequence    = CTAGAACCTTTGTACCACGTGGCATTTTTTTAAACT\n3.  Bubble_sequence = -----------------------+++++++++----\n3.  Motif_sequence  = ------------++++++++++++------------\n4.  seq_id = 909\n4.  DNA_sequence    = GGGCTTATGAGAGACCACGTGGTCTTGTGCTTTAGT\n4.  Bubble_sequence = -----++-----------------------------\n4.  Motif_sequence  = ------------++++++++++++------------\n5.  seq_id = 3063\n5.  DNA_sequence    = ATCAGGAATCTGGACCACGTGGTCAGGCAGAACCAG\n5.  Bubble_sequence = ------+-----------------------------\n5.  Motif_sequence  = ------------++++++++++++------------"
  },
  {
    "objectID": "phase3page.html#overview-on-the-dataset-and-data-processing",
    "href": "phase3page.html#overview-on-the-dataset-and-data-processing",
    "title": "Analysis of gcPBM data",
    "section": "",
    "text": "We acquired gcPBM datasets for three TFs (MAX, MAD, MYC) from Alexandrov Boian’s lab. The data was about yay high and yay wide. We also acquired corresponding feature data for flipping and bubbles.\nThe bubble data, when acquired, was in the form of matrices with 130 rows and 36 columns. The individual columns represented base-pair positions, and rows represented time in picoseconds. The values in the matrix represented the distance between complementary base pairs at that position and time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Bubble heatmaps of sequences with the highest bubble values across all TFs (TF_partition_id - bubble_value)\n\n\nWe investigated multiple methods to optimally encode the bubble data to provide it to the CNN as an additional input channel alongside one-hot encoded sequence data.\n\n\n\n\n\n\nNormalized affinity values for each sequence in each TF\n\n\n\n \n\n\n\n\nLogarithmic distribution of all bubble values for each TF\n\n\n\nFigure 2: gcPBM exploration of affinity and bubble data values\n\n\nWe experimented with taking the average value across all time points, filtering this mean curve, and using the maxima of the resultant curve to delineate a bubble across a certain base pair window focused on the maxima.\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\nFigure 3: Initial attempt at processing bubble data (left to right: heatmap, mean curve, filtered curve, maxima of filtered curve with 3 base pair window)\n\n\nUsing the different variants in our gridsearch for best model parameters revealed no clear winner. We decided to investigate the bubble percentile values and eventually decided on all locations at timepoint 0 (t=0) with a value &gt; 0.03 as bubbles.\n\n\n\nWe tried to acquire motifs for the TFs from the JASPAR database, but we were unable to find motifs for MAD. We then used the motifs for MAX and MYC to scan for motif presence in the sequences of the gcPBM data. We used the FIMO tool from the MEME suite to scan for motif presence. We used the following parameters:\nTBD\n\n\n\nOnce we had the motifs and bubbles identified and tied to base pair locations, we did some basic exploration of the sequences and how motifs and bubbles presented themselves.\nTop 5 sequences per TF in terms of binding affinity that also have bubble features:\nTF = max\n1.  seq_id = 4831\n1.  DNA_sequence    = TGTGGCTTATCAAACCACGTGGTTTATCAAAATAAT\n1.  Bubble_sequence = ------+++++-----------++++++++++++--\n1.  Motif_sequence  = -------------++++++++++-------------\n2.  seq_id = 4187\n2.  DNA_sequence    = GAATTTGACCAAAACCACGTGGTTTGGCTGCAAGTT\n2.  Bubble_sequence = -+++--------------------------------\n2.  Motif_sequence  = -------------++++++++++-------------\n3.  seq_id = 5934\n3.  DNA_sequence    = ATCAGGAATCTGGACCACGTGGTCAGGCAGAACCAG\n3.  Bubble_sequence = ------+-----------------------------\n3.  Motif_sequence  = -------------++++++++++-------------\n4.  seq_id = 4471\n4.  DNA_sequence    = GGGCTTATGAGAGACCACGTGGTCTTGTGCTTTAGT\n4.  Bubble_sequence = ------+-----------------------------\n4.  Motif_sequence  = -------------++++++++++-------------\n5.  seq_id = 8206\n5.  DNA_sequence    = ACAACCACAGAAAACCACGTGGTTTGCTCTGAAATT\n5.  Bubble_sequence = ----------++-------------------++---\n5.  Motif_sequence  = -------------++++++++++-------------\nTF = myc\n1.  seq_id = 5288\n1.  DNA_sequence    = TGTGGCTTATCAAACCACGTGGTTTATCAAAATAAT\n1.  Bubble_sequence = ------++++++----------++++++++++++--\n1.  Motif_sequence  = ------------++++++++++++------------\n2.  seq_id = 3034\n2.  DNA_sequence    = GAATTTGACCAAAACCACGTGGTTTGGCTGCAAGTT\n2.  Bubble_sequence = --++--------------------------------\n2.  Motif_sequence  = ------------++++++++++++------------\n3.  seq_id = 3153\n3.  DNA_sequence    = CTAGAACCTTTGTACCACGTGGCATTTTTTTAAACT\n3.  Bubble_sequence = -----------------------+++++++++----\n3.  Motif_sequence  = ------------++++++++++++------------\n4.  seq_id = 909\n4.  DNA_sequence    = GGGCTTATGAGAGACCACGTGGTCTTGTGCTTTAGT\n4.  Bubble_sequence = -----++-----------------------------\n4.  Motif_sequence  = ------------++++++++++++------------\n5.  seq_id = 3063\n5.  DNA_sequence    = ATCAGGAATCTGGACCACGTGGTCAGGCAGAACCAG\n5.  Bubble_sequence = ------+-----------------------------\n5.  Motif_sequence  = ------------++++++++++++------------"
  },
  {
    "objectID": "phase3page.html#machine-learning-investigation",
    "href": "phase3page.html#machine-learning-investigation",
    "title": "Analysis of gcPBM data",
    "section": "Machine Learning Investigation",
    "text": "Machine Learning Investigation\nWe used a CNN to predict the binding affinity of a TF to a DNA sequence. Our initial models were trained using only the sequences, using a gridsearch to find the best model parameters. We used the following parameters:\nkernel size: 3, 5, 7, 9\nnumber of filters: 16, 32, 64, 128\nnumber of layers: 1, 2, 3\npooling: 3, 1\nAcross all TFs, the best model parameters were a kernel size of 7, 64 filters in the first layer, 3 layers, and no pooling (1). We then used these parameters to train models with the bubble data as an additional input channel, and we contrasted the performance of these models.\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\nFigure 4: Scatterplot showcasing the parameters and results from the best model for each TF\n\n\nThe unanimous conclusion was that the models trained with the bubble data performed worse than the models trained with only the sequence data. We then revised the way we were approaching the bubble data.\nAfter observing the distribution patterns for motifs and bubbles, we decided to redo the gridsearch by searching in the range of kernel size = 6, 8, 10, and comparing sequence only models to models including bubble features.\nTF: Mad\nBest to worst model\nModel: seq_only_1_6_64_3, MSE: 0.025164015591144562, r2: 0.9751617209427638\nModel: seq_only_1_8_64_3, MSE: 0.02559092827141285, r2: 0.9747403303054708\nModel: bubble_linear_1_6_64_3, MSE: 0.025975389406085014, r2: 0.9743608481893277\nModel: seq_only_1_10_64_3, MSE: 0.025992512702941895, r2: 0.9743439469430584\nModel: bubble_linear_1_8_64_3, MSE: 0.02697504125535488, r2: 0.9733741378803168\nModel: bubble_linear_1_10_64_3, MSE: 0.02804403379559517, r2: 0.9723189799559782\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: Model comparison using Scatterplots across MAD\n\n\nTF: Max\nBest to worst model\nModel: bubble_linear_1_6_64_3, MSE: 0.04008778929710388, r2: 0.960649553399618\nModel: seq_only_1_6_64_3, MSE: 0.04050329700112343, r2: 0.9602416902661023\nModel: seq_only_1_8_64_3, MSE: 0.040858376771211624, r2: 0.9598931401387409\nModel: seq_only_1_10_64_3, MSE: 0.04170531406998634, r2: 0.9590617832927455\nModel: bubble_linear_1_8_64_3, MSE: 0.0423930287361145, r2: 0.9583867144681565\nModel: bubble_linear_1_10_64_3, MSE: 0.043693408370018005, r2: 0.9571102520169519\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: Model comparison using Scatterplots across MAX\n\n\nTF: Myc\nBest to worst model\nModel: seq_only_1_8_64_3, MSE: 0.05695045739412308, r2: 0.9444290673365138\nModel: seq_only_1_10_64_3, MSE: 0.05770198628306389, r2: 0.9436957503397924\nModel: bubble_linear_1_8_64_3, MSE: 0.05852825567126274, r2: 0.9428894908346188\nModel: seq_only_1_6_64_3, MSE: 0.060217346996068954, r2: 0.9412413163392869\nModel: bubble_linear_1_6_64_3, MSE: 0.060966987162828445, r2: 0.940509840597948\nModel: bubble_linear_1_10_64_3, MSE: 0.06115123629570007, r2: 0.9403300450380424\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 7: Model comparison using Scatterplots across MYC\n\n\nAt a kernel size of 6, MAX seems to benefit from the inclusion of bubble data, while MAD and MYC do not seem to benefit from bubble data at all. The results were not very conclusive, so we decided to focus on a more statistical approach."
  },
  {
    "objectID": "phase3page.html#statistical-investigation",
    "href": "phase3page.html#statistical-investigation",
    "title": "Analysis of gcPBM data",
    "section": "Statistical Investigation",
    "text": "Statistical Investigation\nWe conducted statistical investigations into the relationship between bubbles, motifs, and binding affinity. Our first investigation was a t-test to see if the presence of a bubble significantly affected binding affinity.\nMAD\nTtest_indResult(statistic=8.00742826839087, pvalue=1.3472019719993843e-15)\n\nMAX\nTtest_indResult(statistic=12.270239455302075, pvalue=2.5385730406292183e-34)\n\nMYC\nTtest_indResult(statistic=5.339201658963607, pvalue=9.632386462326223e-08)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 8: Boxplots and histograms of binding affinity for sequences with and without bubbles.\n\n\nThere appeared to be a significant relationship between bubble presence and binding affinity.\nSince we were unable to find a motif for MAD from JASPAR, the statistical analyses investigating motifs were conducted with the data for MAX and MYC only.\n\nFischer’s Exact Test\nWe conducted a Fischer’s Exact Test to see if the presence of a bubble and motif together significantly affected binding affinity. We counted the base pair positions across our entire dataset that had a bubble, motif, or both, and used these counts to construct a contingency table for the Fischer’s Exact Test.\n\n\n{'max': {'L': 308448, 'B': 12247, 'M': 20190, 'x': 140},\n 'myc': {'L': 249336, 'B': 10106, 'M': 27984, 'x': 194}}\nTF: max\nContingency Table:\n         | Bubble+ | Bubble-\nMotif+   |   140   |   20050\nMotif-   |   12107   |   276151\nOdds Ratio: 0.15926624341104784\nP-value: 2.0930098404665845e-196\n\nTF: myc\nContingency Table:\n         | Bubble+ | Bubble-\nMotif+   |   194   |   27790\nMotif-   |   9912   |   211440\nOdds Ratio: 0.14891520370262265\nP-value: 4.150518659943197e-290\nFigure 9: Fisher’s Exact test using all sequences: L = total length of sequences, B = coordinates with a bubble, M = coordinates with a motif, x = coordinates with both a motif and bubble.\n\n\nThe results of the Fischer’s Exact Test showed that the presence of a bubble and motif together significantly affected binding affinity.\n\n\nThe effect of the distance between bubbles and motifs\nWe then investigated the effect of the distance between bubbles and motifs on binding affinity. To this end, we categorized the top 25% of sequences by binding affinity to be positive sequences. We then defined close distances between motifs and bubbles using a maximum threshold, and then performed a fischer’s exact test at different thresholds.\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\nFigure 10: Histograms showing the distribution of distances between bubbles and motifs for positive and negative sequences.\n\n\n\n\nTable 1: Summary of the results of the Fischer’s Exact Test at different thresholds.\n\n\nThreshold\nMax Odds Ratio (P-value)\nMyc Odds Ratio (P-value)\n\n\n\n\n≤ 1\ninf (0.334863)\n1.839879 (0.000567)\n\n\n≤ 2\ninf (0.162437)\n1.396816 (0.035636)\n\n\n≤ 3\ninf (0.063436)\n0.991813 (1.000000)\n\n\n≤ 4\n1.939929 (0.658042)\n0.888585 (0.474167)\n\n\n≤ 5\n1.413462 (0.658332)\n0.834876 (0.306648)\n\n\n\n\nThe results were significant for MYC at the 1 and 2 thresholds at the 0.05 significance level."
  },
  {
    "objectID": "phase3page.html#linear-regressions",
    "href": "phase3page.html#linear-regressions",
    "title": "Analysis of gcPBM data",
    "section": "Linear Regressions",
    "text": "Linear Regressions\nWe then conducted linear regressions to see the degree to which the presence of a bubble, motif, and an interaction feature significantly affected binding affinity.\n\n\n\n\n(a) Linear regression results for MAX (R-squared = 0.708, F-statistic = 6910).\n\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;\nt\n\n\n\n\n\nconst\n-0.5620\n0.008\n-68.981\n0.000\n-0.578\n-0.546\n\n\nmotif_binary\n2.0056\n0.017\n119.550\n0.000\n1.973\n2.039\n\n\nbubble_binary\n0.3153\n0.014\n22.047\n0.000\n0.287\n0.343\n\n\nmotif_and_bubble_binary\n-0.1396\n0.029\n-4.737\n0.000\n-0.197\n-0.082\n\n\n\n\n\n\n\n\n(b) Linear regression results for MYC (R-squared = 0.406, F-statistic = 1579).\n\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;\nt\n\n\n\n\n\nconst\n-0.5018\n0.014\n-35.384\n0.000\n-0.530\n-0.474\n\n\nmotif_binary\n1.3369\n0.024\n55.488\n0.000\n1.290\n1.384\n\n\nbubble_binary\n0.1645\n0.024\n6.899\n0.000\n0.118\n0.211\n\n\nmotif_and_bubble_binary\n0.0270\n0.042\n0.648\n0.517\n-0.055\n0.109\n\n\n\n\n\n\nTable 2: Linear Regression of all sequences with Motif, Bubble, and Interaction Features.\n\n\n\n\n\n\n(a) Linear regression results for MAX (R-squared = 0.017, F-statistic = 150.6).\n\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;\nt\n[0.025\n\n\n\n\nconst\n-0.0890\n0.013\n-6.817\n0.000\n-0.115\n-0.063\n\n\nbubble_binary\n0.2812\n0.023\n12.270\n0.000\n0.236\n0.326\n\n\n\n\n\n\n\n\n(b) Linear regression results for MYC (R-squared = 0.004, F-statistic = 28.51).\n\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;\nt\n[0.025\n\n\n\n\nconst\n-0.0386\n0.015\n-2.601\n0.009\n-0.068\n-0.010\n\n\nbubble_binary\n0.1351\n0.025\n5.339\n0.000\n0.086\n0.185\n\n\n\n\n\n\nTable 3: Linear Regression of all sequences with Bubble Feature only.\n\n\nThe results of the linear regressions showed that the presence of a bubble and motif significantly affected binding affinity, and that the interaction feature did not significantly affect binding affinity. The regressions performed with bubble data showed the extent to which bubbles alone explain binding."
  },
  {
    "objectID": "phase3page.html#correlations-of-motif-positions-and-flipping-features",
    "href": "phase3page.html#correlations-of-motif-positions-and-flipping-features",
    "title": "Analysis of gcPBM data",
    "section": "Correlations of Motif positions and Flipping features",
    "text": "Correlations of Motif positions and Flipping features\nAnother hypothesis of ours was that flipping features inside or near motifs may determine binding affinity. To test this, we extracted all DNA sequences with motifs. Then we computed the average flipping feature across all positions in the motifs, and found the correlation between this average flipping feature and the binding affinity of the sequence for every sequence.\nTF = max\nPearson Correlation with Motif Flip Feature: Correlation = 0.21, p-value = 6.98e-21\nPearson Correlation with Motif Coord Feature: Correlation = 0.19, p-value = 1.32e-18\nPearson Correlation with Motif Coord^2 Feature: Correlation = 0.18, p-value = 1.02e-16\nTF = myc\nPearson Correlation with Motif Flip Feature: Correlation = 0.10, p-value = 5.81e-07\nPearson Correlation with Motif Coord Feature: Correlation = 0.17, p-value = 4.37e-17\nPearson Correlation with Motif Coord^2 Feature: Correlation = 0.12, p-value = 6.81e-09\n\n\n\n\n\n\nTF = max\n\n\n\n\n\n\n\nTF = myc\n\n\n\nFigure 11: Scatterplots showing the average flipping feature of motifs against binding affinity.\n\n\nWe then calculated correlations for each individual base pair position in the motif.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 12: Barplots showing the correlation (and associated p-value) between flipping features and binding affinity for each base pair position in the motif."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "phase2page.html",
    "href": "phase2page.html",
    "title": "CNN analysis of Chip-seq data",
    "section": "",
    "text": "As we can see, YY1 appeared to respond well to the DNA breathing signal. We followed these results up with in-depth analysis into the YY1 TF.\n\n\nOur YY1 positive sequences were collected from 6 different cell lines, ‘A549’, ‘GM12878’, ‘GM12892’, ‘H1hESC’, ‘HepG2’, and ‘K562’. The first check made was whether sequences that were highly dependent on biophysical features for improved prediction performance had any overlap across the different cell lines. The goal was to see if the overlap extended to other TFs and cell lines as well.\nWe were using zero-nullification at inference initially. Zero nullification at inference gives input to the model evaluation phase that has a zero matrix in place of the biophysical features. The model output with features was then subtracted from the model output without features to get the effect of the biophysical features on the model output. The top ten sequences with the greatest difference were then tested for overlap across cell lines.\nThese are the overlap clusters we made with this architecture:\n \nThe next step was determined to be normalization of features. This was done because (ask Ben).\nThe normalization was carried out by calculating the mean and standard deviation values of a feature across the entire training partition of our dataset, and this value was then used on the testing set as well. The values we used for our Chip-seq data were:\ncoord: mean = 0.19155923417221135, std = 0.038960426724374435\ncoord_sq: mean = 0.14925209287264518, std = 0.039466117929090765\ncoord: mean = 0.07465950796958755, std = 0.018489519373127622\nThe statistics for our test partitions after normalization were:\ncoord: mean = 0.07738674543113, std = 1.0111124691462943\ncoord_sq: mean = 0.08939614710405903, std = 1.0202053755668645\ncoord: mean = 0.08363005394874898, std = 1.0168371143051296\nAfter normalizing, we repeated the analysis with zero nullification at inference. The results had a lot more overlap than the analysis conducted without normalizing:\n \nFurther improvements were made to the method of analysis. Instead of using zero-nullification, we decided that gaussian noise would be a better way to nullify the biophysical features. We tried two different methods with gaussian noise, the first was to use gaussian noise at inference, and the second was to train a separate model with gaussian noise and then subtract the model outputs.\nThe results for gaussian noise at inference were:\n \nThe results for gaussian noise at training were:\n \nThe results across the different methods were very different from each other. The most overlap was achieved with zero nullification of normalized features."
  },
  {
    "objectID": "phase2page.html#overview-on-yy1",
    "href": "phase2page.html#overview-on-yy1",
    "title": "CNN analysis of Chip-seq data",
    "section": "",
    "text": "As we can see, YY1 appeared to respond well to the DNA breathing signal. We followed these results up with in-depth analysis into the YY1 TF.\n\n\nOur YY1 positive sequences were collected from 6 different cell lines, ‘A549’, ‘GM12878’, ‘GM12892’, ‘H1hESC’, ‘HepG2’, and ‘K562’. The first check made was whether sequences that were highly dependent on biophysical features for improved prediction performance had any overlap across the different cell lines. The goal was to see if the overlap extended to other TFs and cell lines as well.\nWe were using zero-nullification at inference initially. Zero nullification at inference gives input to the model evaluation phase that has a zero matrix in place of the biophysical features. The model output with features was then subtracted from the model output without features to get the effect of the biophysical features on the model output. The top ten sequences with the greatest difference were then tested for overlap across cell lines.\nThese are the overlap clusters we made with this architecture:\n \nThe next step was determined to be normalization of features. This was done because (ask Ben).\nThe normalization was carried out by calculating the mean and standard deviation values of a feature across the entire training partition of our dataset, and this value was then used on the testing set as well. The values we used for our Chip-seq data were:\ncoord: mean = 0.19155923417221135, std = 0.038960426724374435\ncoord_sq: mean = 0.14925209287264518, std = 0.039466117929090765\ncoord: mean = 0.07465950796958755, std = 0.018489519373127622\nThe statistics for our test partitions after normalization were:\ncoord: mean = 0.07738674543113, std = 1.0111124691462943\ncoord_sq: mean = 0.08939614710405903, std = 1.0202053755668645\ncoord: mean = 0.08363005394874898, std = 1.0168371143051296\nAfter normalizing, we repeated the analysis with zero nullification at inference. The results had a lot more overlap than the analysis conducted without normalizing:\n \nFurther improvements were made to the method of analysis. Instead of using zero-nullification, we decided that gaussian noise would be a better way to nullify the biophysical features. We tried two different methods with gaussian noise, the first was to use gaussian noise at inference, and the second was to train a separate model with gaussian noise and then subtract the model outputs.\nThe results for gaussian noise at inference were:\n \nThe results for gaussian noise at training were:\n \nThe results across the different methods were very different from each other. The most overlap was achieved with zero nullification of normalized features."
  },
  {
    "objectID": "phase2page.html#shift-to-stat5a-and-fosl1",
    "href": "phase2page.html#shift-to-stat5a-and-fosl1",
    "title": "CNN analysis of Chip-seq data",
    "section": "Shift to STAT5A and FOSL1",
    "text": "Shift to STAT5A and FOSL1\n\nAUC and PRC comparison across TFs\nParallel to the aforementioned investigation, we were also using the different variations of our models to see the difference between AUCs and PRCs across different TFs based on the biophysical features. The investigation involved adjusting not only the nullification method, but also some parameters of the CNNs for the sake of more effective motif extraction down the line. The results were as follows:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview on computational methods to assess the impact of DNA biophysical features on the binding affinity of Transcriptional factors",
    "section": "",
    "text": "This is a project homepage detailing the work done at Dr. Xinhe’s lab of computational biology at the department of human genetics, University of Chicago.\n\n\nThis project is investigating the role played by DNA biophysical features in the regulation of Transcription Factor (TF) binding. It endeavors to shed light on how specific DNA biophysical characteristics, such as bubble features and DNA flipping, contribute to the affinity and selectivity of TF binding interactions.\nBy employing advanced computational methods, including Convolutional Neural Networks (CNNs) as one downstream analysis tool among others, the findings hold the potential to provide a deeper understanding of gene regulation and facilitate insights into the broader landscape of cellular processes.\n\n\nPosition Weight Matrices (PWMs) are essential tools in computational biology for modeling and understanding sequence-specific binding preferences of DNA-binding proteins, including Transcription Factors (TFs). A PWM is a matrix that quantifies the likelihood of observing each nucleotide at every position within a binding site motif. Each row of the matrix corresponds to a nucleotide (A, C, G, T), and each column corresponds to a position in the motif. PWMs are constructed based on empirical data derived from known binding sites, which allows them to capture the frequency of nucleotide occurrences at each position. By scoring potential binding sites against a PWM, researchers can predict the binding affinity of a TF for a given DNA sequence. PWMs serve as valuable tools for motif discovery, regulatory element prediction, and understanding the intricate interplay between TFs and their target DNA sequences.\n\n\n\nBinding site motifs are recurring sequence patterns within DNA that hold significance in molecular biology, particularly in gene regulation. These motifs represent the specific DNA sequences recognized by Transcription Factors (TFs) and other DNA-binding proteins. Binding site motifs are characterized by their conserved arrangement of nucleotides, often exhibiting variations that allow recognition of similar sequences by different TFs. These motifs play a pivotal role in gene expression regulation, as TFs bind to these sites to control transcription and other cellular processes. Identifying and understanding binding site motifs are crucial for deciphering gene regulatory networks, predicting TF-DNA interactions, and elucidating the intricate mechanisms that underlie genetic programming.\n\n\n\nDNA biophysical features encompass a range of physical and structural properties intrinsic to the DNA molecule, which influence its behavior and interactions within cellular processes. These features include characteristics such as DNA breathing, flexibility, stability, and local structural variations like DNA bubbles and flipping of nucleotide bases. Each of these features contributes to the overall dynamics and functionality of DNA, impacting processes like replication, transcription, and binding interactions with proteins, including Transcription Factors (TFs).\n\n\n\n\n\nDNA breathing, also known as DNA fluctuations or thermal breathing, refers to the dynamic and transient opening and closing of base pairs in a DNA double helix. This phenomenon occurs due to the inherent flexibility of the DNA molecule and is driven by thermal fluctuations. As the temperature changes, the hydrogen bonds that hold the base pairs together weaken, causing the helix to locally unwind. These transient openings, or “breathing” events, can expose bases for potential interactions with other molecules, such as proteins like Transcription Factors (TFs). DNA breathing plays a crucial role in various biological processes, including DNA replication, transcription, and binding of regulatory proteins.\n\n\n\nA DNA bubble, in the context of molecular biology, is a region within a DNA double helix where the two strands temporarily separate, forming a single-stranded DNA loop flanked by double-stranded regions. These bubbles are created due to the thermal fluctuations that cause the hydrogen bonds between base pairs to momentarily break. DNA bubble features encompass the size, stability, and dynamics of these transient openings in the DNA structure. Understanding DNA bubble features is of paramount importance as they influence processes like DNA unwinding during replication and transcription initiation. By characterizing bubble features, researchers can gain insights into the mechanical properties of DNA and its interactions with various cellular components.\n\n\n\nDNA flipping, also known as base flipping, is a structural alteration in DNA where a specific nucleotide base is rotated or flipped out of its usual position in the double helix. This alteration exposes the base in a way that makes it more accessible for interactions with other molecules. DNA flipping often occurs when certain enzymes, such as DNA methyltransferases, need to chemically modify the exposed base. The transient opening and flipping of bases are facilitated by specific protein complexes that temporarily disrupt the hydrogen bonding between the base pairs. DNA flipping is crucial for epigenetic modifications, repair processes, and DNA-protein interactions, making it a significant mechanism in gene regulation and genome maintenance.\n\n\n\n\n\n\nConvolutional Neural Networks (CNNs) are a class of deep learning models designed specifically for processing structured grid-like data, such as images and sequences. CNNs are inspired by the visual cortex’s organization in animals, where neurons respond to specific localized regions of the visual field. Similarly, CNNs operate by convolving learnable filters (kernels) over input data, allowing them to capture local patterns and features. The network’s architecture includes layers for convolution, pooling, and fully connected operations, enabling hierarchical feature extraction. In the context of this project, CNNs are employed to analyze DNA sequences and biophysical features, facilitating the identification of intricate patterns related to Transcription Factor (TF) binding. By learning meaningful representations from raw data, CNNs offer a powerful tool to uncover hidden correlations and contribute to the comprehension of complex biological interactions.\n\n\n\n\n\n\n\nIn the project’s initial phase, Ben led the investigation into whether CNNs can learn features in DNA sequences that influence Transcription Factor (TF) binding. The study also explored the possible role of DNA biophysical features in this binding. Using Chip-seq data, which provided DNA sequences of about 500 base pairs from 130 cell lines and involving 64 TFs, the team introduced three biophysical feature channels derived from DNA flipping data. The models designed included:\n\nA simple CNN architecture, data: DNA sequences only\nA simple CNN architecture, data: DNA sequences and biophysical features\nA multimodal CNN architecture, data: DNA sequences and biophysical features fed separately to two different networks, then recombined before classification\nA hybrid CNN-LSTM network, data: DNA sequences and biophysical features\n\nEach model had a kernel size of 5, pooling size of 3, and 3 layers. The LSTM network component had x hidden layers.\nThe 4th modality had the best performance as measured with ROC and PRC curves/scores.\nThe first conclusion derived was that YY1 (a TF) relied strongly (stronger than other TFs) on biophysical features to moderate binding affinity, and so the first investigation performed was to evaluate YY1.\n\n\n\n\n\n\nThe second stage of this analysis was to compare the top ten sequences in YY1 and see if these overlapped with other TFs and cell lines and their top ten sequences.\nTo do this, I had to check all 6 of the YY1 cell lines in our dataset, evaluate their sequences with our model, and compare the performance with biophysical features and without. We were doing this using zero-nullification at inference, which means that in the test-set of the model, the evaluation with biophysical features would be subtracted by an evaluation with the biophysical features being forcibly replaced with a zero-array.\n\n\n\nROC curve for YY1\n\nThe sequences with the highest difference were sorted, and then the overlap between different cell lines within YY1 was evaluated. This gave us two analyses. One was simply a list of the sequences with overlap, and the other was a clustermap with the overlap of sequences being displayed as heat. This methodology was extended to all cell lines and TFs in the dataset.\nThe same process was repeated with different model parameters and nullification methods.\n\n\n\nlorem ipsum\n\n\n\n\n\n\nWe acquired gcPBM sequences and corresponding DNA bubble simulation data from Alexandrov Boian’s lab. gcPBM as a method differs from ChIP-seq in key ways: it is a direct measurement of TF binding affinity, and it is performed in vitro. This means that the sequences are not subject to the same biases as ChIP-seq data, and the binding affinity is measured directly, rather than inferred from the binding strength of the TF. The sequences are also much shorter, at 36 base pairs, and the data is much more sparse, with only 3 TFs. However, the data is much more reliable, and the sequences are much more likely to be true binding sites. The affinity is a value between 0 and 1, with 1 being the highest affinity.\nThe bubble data, when acquired, was in the form of matrices with 130 rows and 36 columns. The individual columns represented base-pair positions, and rows represented time in picoseconds. The values in the matrix represented the distance between complementary base pairs at that position and time.\n\n\n\nBubble data\n\n\n\nBubble data\n\n\n\nBubble data\n\nWe used the first measurement (t=0) and considered all positions with a value &gt; 0.03 as being a bubble.\nWe had two investigations running in parallel, with one machine learning approach and one statistical.\n\n\n\nThe machine learning approach was to use the gcPBM sequences as a training set and see if adding bubble data to the input of the model would improve performance. The CNN architecture we used was a simple CNN followed by a linear regressor. We first ran a grid search on the sequences alone to see which parameters worked best in the CNN, and settled for a kernel size of 7, 64 filters in the first layer, 3 layers, and no pooling.\nThe results overwhelmingly showed that bubble features did not improve the performance of the model.\n\n\n\nWe used fischer’s exact test and linear regressions to compare the effect of a bubble to the effect of a motif in determining binding affinity."
  },
  {
    "objectID": "index.html#premise",
    "href": "index.html#premise",
    "title": "Overview on computational methods to assess the impact of DNA biophysical features on the binding affinity of Transcriptional factors",
    "section": "",
    "text": "This project is investigating the role played by DNA biophysical features in the regulation of Transcription Factor (TF) binding. It endeavors to shed light on how specific DNA biophysical characteristics, such as bubble features and DNA flipping, contribute to the affinity and selectivity of TF binding interactions.\nBy employing advanced computational methods, including Convolutional Neural Networks (CNNs) as one downstream analysis tool among others, the findings hold the potential to provide a deeper understanding of gene regulation and facilitate insights into the broader landscape of cellular processes.\n\n\nPosition Weight Matrices (PWMs) are essential tools in computational biology for modeling and understanding sequence-specific binding preferences of DNA-binding proteins, including Transcription Factors (TFs). A PWM is a matrix that quantifies the likelihood of observing each nucleotide at every position within a binding site motif. Each row of the matrix corresponds to a nucleotide (A, C, G, T), and each column corresponds to a position in the motif. PWMs are constructed based on empirical data derived from known binding sites, which allows them to capture the frequency of nucleotide occurrences at each position. By scoring potential binding sites against a PWM, researchers can predict the binding affinity of a TF for a given DNA sequence. PWMs serve as valuable tools for motif discovery, regulatory element prediction, and understanding the intricate interplay between TFs and their target DNA sequences.\n\n\n\nBinding site motifs are recurring sequence patterns within DNA that hold significance in molecular biology, particularly in gene regulation. These motifs represent the specific DNA sequences recognized by Transcription Factors (TFs) and other DNA-binding proteins. Binding site motifs are characterized by their conserved arrangement of nucleotides, often exhibiting variations that allow recognition of similar sequences by different TFs. These motifs play a pivotal role in gene expression regulation, as TFs bind to these sites to control transcription and other cellular processes. Identifying and understanding binding site motifs are crucial for deciphering gene regulatory networks, predicting TF-DNA interactions, and elucidating the intricate mechanisms that underlie genetic programming.\n\n\n\nDNA biophysical features encompass a range of physical and structural properties intrinsic to the DNA molecule, which influence its behavior and interactions within cellular processes. These features include characteristics such as DNA breathing, flexibility, stability, and local structural variations like DNA bubbles and flipping of nucleotide bases. Each of these features contributes to the overall dynamics and functionality of DNA, impacting processes like replication, transcription, and binding interactions with proteins, including Transcription Factors (TFs).\n\n\n\n\n\nDNA breathing, also known as DNA fluctuations or thermal breathing, refers to the dynamic and transient opening and closing of base pairs in a DNA double helix. This phenomenon occurs due to the inherent flexibility of the DNA molecule and is driven by thermal fluctuations. As the temperature changes, the hydrogen bonds that hold the base pairs together weaken, causing the helix to locally unwind. These transient openings, or “breathing” events, can expose bases for potential interactions with other molecules, such as proteins like Transcription Factors (TFs). DNA breathing plays a crucial role in various biological processes, including DNA replication, transcription, and binding of regulatory proteins.\n\n\n\nA DNA bubble, in the context of molecular biology, is a region within a DNA double helix where the two strands temporarily separate, forming a single-stranded DNA loop flanked by double-stranded regions. These bubbles are created due to the thermal fluctuations that cause the hydrogen bonds between base pairs to momentarily break. DNA bubble features encompass the size, stability, and dynamics of these transient openings in the DNA structure. Understanding DNA bubble features is of paramount importance as they influence processes like DNA unwinding during replication and transcription initiation. By characterizing bubble features, researchers can gain insights into the mechanical properties of DNA and its interactions with various cellular components.\n\n\n\nDNA flipping, also known as base flipping, is a structural alteration in DNA where a specific nucleotide base is rotated or flipped out of its usual position in the double helix. This alteration exposes the base in a way that makes it more accessible for interactions with other molecules. DNA flipping often occurs when certain enzymes, such as DNA methyltransferases, need to chemically modify the exposed base. The transient opening and flipping of bases are facilitated by specific protein complexes that temporarily disrupt the hydrogen bonding between the base pairs. DNA flipping is crucial for epigenetic modifications, repair processes, and DNA-protein interactions, making it a significant mechanism in gene regulation and genome maintenance.\n\n\n\n\n\n\nConvolutional Neural Networks (CNNs) are a class of deep learning models designed specifically for processing structured grid-like data, such as images and sequences. CNNs are inspired by the visual cortex’s organization in animals, where neurons respond to specific localized regions of the visual field. Similarly, CNNs operate by convolving learnable filters (kernels) over input data, allowing them to capture local patterns and features. The network’s architecture includes layers for convolution, pooling, and fully connected operations, enabling hierarchical feature extraction. In the context of this project, CNNs are employed to analyze DNA sequences and biophysical features, facilitating the identification of intricate patterns related to Transcription Factor (TF) binding. By learning meaningful representations from raw data, CNNs offer a powerful tool to uncover hidden correlations and contribute to the comprehension of complex biological interactions."
  },
  {
    "objectID": "index.html#phase-1",
    "href": "index.html#phase-1",
    "title": "Overview on computational methods to assess the impact of DNA biophysical features on the binding affinity of Transcriptional factors",
    "section": "",
    "text": "In the project’s initial phase, Ben led the investigation into whether CNNs can learn features in DNA sequences that influence Transcription Factor (TF) binding. The study also explored the possible role of DNA biophysical features in this binding. Using Chip-seq data, which provided DNA sequences of about 500 base pairs from 130 cell lines and involving 64 TFs, the team introduced three biophysical feature channels derived from DNA flipping data. The models designed included:\n\nA simple CNN architecture, data: DNA sequences only\nA simple CNN architecture, data: DNA sequences and biophysical features\nA multimodal CNN architecture, data: DNA sequences and biophysical features fed separately to two different networks, then recombined before classification\nA hybrid CNN-LSTM network, data: DNA sequences and biophysical features\n\nEach model had a kernel size of 5, pooling size of 3, and 3 layers. The LSTM network component had x hidden layers.\nThe 4th modality had the best performance as measured with ROC and PRC curves/scores.\nThe first conclusion derived was that YY1 (a TF) relied strongly (stronger than other TFs) on biophysical features to moderate binding affinity, and so the first investigation performed was to evaluate YY1."
  },
  {
    "objectID": "index.html#phase-2",
    "href": "index.html#phase-2",
    "title": "Overview on computational methods to assess the impact of DNA biophysical features on the binding affinity of Transcriptional factors",
    "section": "",
    "text": "The second stage of this analysis was to compare the top ten sequences in YY1 and see if these overlapped with other TFs and cell lines and their top ten sequences.\nTo do this, I had to check all 6 of the YY1 cell lines in our dataset, evaluate their sequences with our model, and compare the performance with biophysical features and without. We were doing this using zero-nullification at inference, which means that in the test-set of the model, the evaluation with biophysical features would be subtracted by an evaluation with the biophysical features being forcibly replaced with a zero-array.\n\n\n\nROC curve for YY1\n\nThe sequences with the highest difference were sorted, and then the overlap between different cell lines within YY1 was evaluated. This gave us two analyses. One was simply a list of the sequences with overlap, and the other was a clustermap with the overlap of sequences being displayed as heat. This methodology was extended to all cell lines and TFs in the dataset.\nThe same process was repeated with different model parameters and nullification methods.\n\n\n\nlorem ipsum"
  },
  {
    "objectID": "index.html#phase-3",
    "href": "index.html#phase-3",
    "title": "Overview on computational methods to assess the impact of DNA biophysical features on the binding affinity of Transcriptional factors",
    "section": "",
    "text": "We acquired gcPBM sequences and corresponding DNA bubble simulation data from Alexandrov Boian’s lab. gcPBM as a method differs from ChIP-seq in key ways: it is a direct measurement of TF binding affinity, and it is performed in vitro. This means that the sequences are not subject to the same biases as ChIP-seq data, and the binding affinity is measured directly, rather than inferred from the binding strength of the TF. The sequences are also much shorter, at 36 base pairs, and the data is much more sparse, with only 3 TFs. However, the data is much more reliable, and the sequences are much more likely to be true binding sites. The affinity is a value between 0 and 1, with 1 being the highest affinity.\nThe bubble data, when acquired, was in the form of matrices with 130 rows and 36 columns. The individual columns represented base-pair positions, and rows represented time in picoseconds. The values in the matrix represented the distance between complementary base pairs at that position and time.\n\n\n\nBubble data\n\n\n\nBubble data\n\n\n\nBubble data\n\nWe used the first measurement (t=0) and considered all positions with a value &gt; 0.03 as being a bubble.\nWe had two investigations running in parallel, with one machine learning approach and one statistical.\n\n\n\nThe machine learning approach was to use the gcPBM sequences as a training set and see if adding bubble data to the input of the model would improve performance. The CNN architecture we used was a simple CNN followed by a linear regressor. We first ran a grid search on the sequences alone to see which parameters worked best in the CNN, and settled for a kernel size of 7, 64 filters in the first layer, 3 layers, and no pooling.\nThe results overwhelmingly showed that bubble features did not improve the performance of the model.\n\n\n\nWe used fischer’s exact test and linear regressions to compare the effect of a bubble to the effect of a motif in determining binding affinity."
  }
]